@model SG_ASP_1.Models.MedicinaCreateViewModel

@{
    ViewBag.Title = "Medicina";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <h2>Crear Medicina</h2>
    <div>
        <dl class="dl-horizontal">
            <dt>@Html.DisplayNameFor(model => model.AtenId)</dt>
            <dd> @Html.EditorFor(model => model.AtenId, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control" } })
            <dt>@Html.DisplayNameFor(model => model.DocIde)</dt>
            <dd>@Html.DisplayFor(model => model.DocIde)</dd>

            <dt>@Html.DisplayNameFor(model => model.NomApe)</dt>
            <dd>@Html.DisplayFor(model => model.NomApe)</dd>

            <dt>@Html.DisplayNameFor(model => model.Empres)</dt>
            <dd>@Html.DisplayFor(model => model.Empres)</dd>
        </dl>
    </div>

    <div class="form-horizontal">

        <h4>Medicina</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.HorIng, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HorIng, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HorIng, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.HorSal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HorSal, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HorSal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Medico, "Medico", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Medico", null, htmlAttributes: new {  @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Medico, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Aptitu, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.DropDownList("Aptitu",null,htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Aptitu, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FecApt, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.FecApt, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FecApt, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FecEnv, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.FecEnv, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FecEnv, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Coment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.TextAreaFor(model => model.Coment, new { @class = "form-control", rows = "2" })
                @Html.ValidationMessageFor(model => model.Coment, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Observ, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.TextAreaFor(model => model.Observ, new { @class = "form-control", rows = "2" })
                @Html.ValidationMessageFor(model => model.Observ, "", new { @class = "text-danger" })
            </div>
        </div>
        </div>
        @*------INTERCONSULTA-------*@
        <hr />
        <h4>Interconsultas</h4>
        <div class="row">
        <div class="form-inline">
            Interconsulta
            <input type="text" id="IntCon" class="form-control"/>
            <input type="button" value="Agregar" onclick="AgregaInterconsulta(); return false;" class="btn btn-default" />
        </div>
        <div id="divInterconsultas">
            <table id="tableInterconsultas" class="table table-hover">
                <thead>
                    <tr class="table-info">
                        <th scope="col">Interconsultas</th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Guardar" class="btn btn-primary" />
        </div>
    </div>
}


<script>
    var num = 0;
    function AgregaInterconsulta() {
        //captura datos
        let IntCon = document.getElementById("IntCon").value;

        //agrega tabla
        let Tabla = document.getElementById("tableInterconsultas");
        let TR = document.createElement("tr");
        let TDInterconsulta = document.createElement("td");

        TR.appendChild(TDInterconsulta);
        TDInterconsulta.innerHTML = IntCon;

        Tabla.appendChild(TR);

        //agregamos hiden
        let divInterconsultas = document.getElementById("divInterconsultas");
        let HiddenIndex = document.createElement("input");
        let HiddenInterconsulta = document.createElement("input");

        HiddenIndex.name = "interconsultas.Index"
        HiddenIndex.value = num;
        HiddenIndex.type = "hidden";
        HiddenInterconsulta.name = "interconsultas[" + num + "].IntCon";
        HiddenInterconsulta.value = IntCon;
        HiddenInterconsulta.type = "hidden";

        divInterconsultas.appendChild(HiddenIndex);
        divInterconsultas.appendChild(HiddenInterconsulta);

        document.getElementById("IntCon").value = "";

        num++;
    }
</script>